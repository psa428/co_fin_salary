{"ast":null,"code":"var _jsxFileName = \"/home/psa/develop/result-school/co-fin-salary/frontend/src/components/menu/menu.js\",\n  _s = $RefreshSig$();\nimport { useServerRequest } from \"../../hooks\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUserRole } from \"../../selectors\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MenuContainer = ({\n  className\n}) => {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [menuItems, setMenuItems] = useState(null);\n  const requestServer = useServerRequest();\n  let roleId = useSelector(selectUserRole);\n  useEffect(() => {\n    // Promise.all([\n    //     requestServer('fetchMenu'), \n\n    // ]).then((menuRes) => {\n    if (roleId) {\n      requestServer('fetchMenu', roleId).then(menuRes => {\n        if (menuRes.error) {\n          setErrorMessage(menuRes.error);\n          return;\n        }\n        ;\n        console.log('menuRes = ', menuRes.data);\n        setMenuItems(menuRes.data);\n      });\n    } else setMenuItems(null);\n  }, [requestServer, roleId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: menuItems ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-items\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041C\\u0435\\u043D\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: menuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"menu-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `${item.path}`,\n            children: item.menu_item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(MenuContainer, \"h/0aUmh7vRGYNmAq5aP4MYp8aIA=\", false, function () {\n  return [useServerRequest, useSelector];\n});\n_c = MenuContainer;\nexport const Menu = styled(MenuContainer)`\n    display:    flex;\n    flex-direction: column;  \n    align-items:   center;\n    margin: 0   auto;\n    width:  570px;\n    front-size: 28px;\n\n    & .menu-item {\n        margin: auto auto 10px;\n        font-size:  large;color:  #007879\n    }\n    & a {\n        color:  #007879\n        \n    }    \n\n\n\n`;\nvar _c;\n$RefreshReg$(_c, \"MenuContainer\");","map":{"version":3,"names":["useServerRequest","useState","Link","useEffect","useSelector","selectUserRole","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","MenuContainer","className","_s","errorMessage","setErrorMessage","menuItems","setMenuItems","requestServer","roleId","then","menuRes","error","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","to","path","menu_item","id","_c","Menu","$RefreshReg$"],"sources":["/home/psa/develop/result-school/co-fin-salary/frontend/src/components/menu/menu.js"],"sourcesContent":["import { useServerRequest } from \"../../hooks\"; \nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUserRole } from \"../../selectors\";\nimport styled from \"styled-components\";\n\n\nconst MenuContainer = ({ className }) => {\n    \n    const [errorMessage, setErrorMessage] = useState(null);\n    const [menuItems, setMenuItems] = useState(null);\n    const requestServer = useServerRequest();\n    \n    let roleId = useSelector(selectUserRole)\n    \n    useEffect(() => {\n        // Promise.all([\n        //     requestServer('fetchMenu'), \n            \n        // ]).then((menuRes) => {\n        if (roleId) {    \n            requestServer('fetchMenu', roleId).then((menuRes) => {\n                \n                if (menuRes.error) {\n                    \n                    setErrorMessage(menuRes.error);\n                    return;\n                };\n                console.log('menuRes = ', menuRes.data)\n                setMenuItems(menuRes.data);\n                \n            });\n        \n        }    \n        else\n            setMenuItems(null) ;\n    }, [requestServer, roleId]);\n\n    \n\n\n    return (\n        <div className={className}>\n            {/* <Content error={errorMessage}> */}\n            \n            {menuItems ?\n           \n            <div className=\"menu-items\">\n                <h2>Меню</h2>\n               <ul>\n                { \n                menuItems.map((item, index) => \n                     \n                    <li className=\"menu-item\" key={item.id}>\n                        <Link to={`${item.path}`}>\n                            {item.menu_item}\n                        </Link>\n                    </li>\n                \n                   \n                )}  \n                </ul>\n\n            </div>\n            : <></> \n            \n                }   \n            {/* </Content> */}\n            \n        </div>    \n    );\n\n}\n\nexport const Menu = styled(MenuContainer)`\n    display:    flex;\n    flex-direction: column;  \n    align-items:   center;\n    margin: 0   auto;\n    width:  570px;\n    front-size: 28px;\n\n    & .menu-item {\n        margin: auto auto 10px;\n        font-size:  large;color:  #007879\n    }\n    & a {\n        color:  #007879\n        \n    }    \n\n\n\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}