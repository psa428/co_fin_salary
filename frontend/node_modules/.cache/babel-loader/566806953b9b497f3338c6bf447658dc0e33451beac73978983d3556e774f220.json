{"ast":null,"code":"var _jsxFileName = \"/home/psa/develop/result-school/blog/src/pages/users/components/user-row/user-row.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Icon } from \"../../../../components\";\nimport styled from \"styled-components\";\nimport { TableRow } from \"../table-row/table-row\";\nimport { ROLE } from \"../../../../bff/constants\";\nimport { useServerRequest } from \"../../../../hooks\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserRowContainer = ({\n  className,\n  id,\n  login,\n  registredAt,\n  roleId: userRoleId,\n  roles\n}) => {\n  _s();\n  const [initialRoleId, setInitialRoleId] = useState(userRoleId);\n  const [selectedRoleId, setSelectedRoleId] = useState(userRoleId);\n  const requestServer = useServerRequest();\n\n  // const roles = [];\n\n  const onRoleChange = ({\n    target\n  }) => {\n    setSelectedRoleId(Number(target.value));\n  };\n  const onRoleSave = (userId, newUserRoleId) => {\n    requestServer('updateUserRole', userId, newUserRoleId).then(() => {\n      setInitialRoleId(newUserRoleId);\n    });\n  };\n  const isSaveButtonDisabled = selectedRoleId === userRoleId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      border: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-column\",\n        children: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registered-at-column\",\n        children: registredAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"role-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRoleId,\n          onChange: onRoleChange,\n          children: roles.map(({\n            id: roleId,\n            name: roleName\n          }) => Number(roleId) !== ROLE.GUEST ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: roleId,\n            children: roleName\n          }, roleId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Icon, {\n          id: \"fa-floppy-o\",\n          margin: \"0 0 0 10px\",\n          disabled: isSaveButtonDisabled,\n          onClick: () => onRoleSave(id, selectedRoleId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      id: \"fa-trash-o\",\n      margin: \"0 0 0 10px\",\n      onClick: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(UserRowContainer, \"lbD2z0hzhWkBQJU6DKOqjaqiZug=\", false, function () {\n  return [useServerRequest];\n});\n_c = UserRowContainer;\nexport const UserRow = styled(UserRowContainer)`\n    display:    flex;  \n    margin-top: 10px;\n\n    & select {\n        padding: 0 5px;\n        font-size:  16px;\n    }\n`;\nvar _c;\n$RefreshReg$(_c, \"UserRowContainer\");","map":{"version":3,"names":["useState","Icon","styled","TableRow","ROLE","useServerRequest","jsxDEV","_jsxDEV","Fragment","_Fragment","UserRowContainer","className","id","login","registredAt","roleId","userRoleId","roles","_s","initialRoleId","setInitialRoleId","selectedRoleId","setSelectedRoleId","requestServer","onRoleChange","target","Number","value","onRoleSave","userId","newUserRoleId","then","isSaveButtonDisabled","children","border","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","name","roleName","GUEST","margin","disabled","onClick","_c","UserRow","$RefreshReg$"],"sources":["/home/psa/develop/result-school/blog/src/pages/users/components/user-row/user-row.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Icon } from \"../../../../components\";\nimport styled from \"styled-components\";\nimport { TableRow } from \"../table-row/table-row\";\nimport { ROLE } from \"../../../../bff/constants\";\nimport { useServerRequest } from \"../../../../hooks\";\n\n\nconst UserRowContainer = ({ className, id, login, registredAt, roleId: userRoleId, roles }) => {\n\n    const [initialRoleId, setInitialRoleId] = useState(userRoleId);\n    const [selectedRoleId, setSelectedRoleId] = useState(userRoleId);\n    const requestServer = useServerRequest();\n    \n    // const roles = [];\n\n    const onRoleChange = ({ target }) => {\n        setSelectedRoleId(Number(target.value));\n\n    };\n\n    const onRoleSave = (userId, newUserRoleId) => {\n        requestServer('updateUserRole', userId, newUserRoleId).then(() => {\n            setInitialRoleId(newUserRoleId);\n        });\n\n    };\n\n    const isSaveButtonDisabled = selectedRoleId === userRoleId;\n\n    return (\n        <div className={className} >\n            <TableRow border={true}>\n                <div className=\"login-column\">{login}</div>\n                <div className=\"registered-at-column\">{registredAt}</div>\n                <div className=\"role-column\">\n                    <select value={selectedRoleId} onChange={onRoleChange}>\n                        {roles.map(({ id: roleId, name: roleName }) => (Number(roleId) !== ROLE.GUEST ?\n                            <option key={roleId} value={roleId}>{roleName}</option>\n                            : <></>\n                        ))}\n                    </select>\n                        <Icon id=\"fa-floppy-o\"  \n                            margin=\"0 0 0 10px\"   \n                            disabled={isSaveButtonDisabled}    \n                            onClick={() => onRoleSave(id, selectedRoleId)} \n                        />\n                    \n                        \n                </div>    \n            </TableRow>\n            \n            <Icon id=\"fa-trash-o\"                    \n                margin=\"0 0 0 10px\"\n                onClick={() => {}} />\n            <div className=\"user-data\"></div>\n            \n\n        </div>\n    );\n};\n\nexport const UserRow = styled(UserRowContainer)`\n    display:    flex;  \n    margin-top: 10px;\n\n    & select {\n        padding: 0 5px;\n        font-size:  16px;\n    }\n`;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}