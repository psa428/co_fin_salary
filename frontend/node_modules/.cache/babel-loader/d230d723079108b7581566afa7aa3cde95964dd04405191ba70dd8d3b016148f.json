{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useStore } from 'react-redux';\nexport const useResetForm = reset => {\n  _s();\n  const store = useStore();\n  useEffect(() => {\n    let currentWasLogout = store.getState().app.wasLogout;\n    return store.subscribe(() => {\n      let previousWasLogout = currentWasLogout;\n      currentWasLogout = store.getState().app.wasLogout;\n      if (currentWasLogout !== previousWasLogout) {\n        reset();\n      }\n    });\n  }, [reset, store]);\n};\n_s(useResetForm, \"7WX0f3w9+vyXsBWAiuPF4CU1RJU=\", false, function () {\n  return [useStore];\n});","map":{"version":3,"names":["useEffect","useStore","useResetForm","reset","_s","store","currentWasLogout","getState","app","wasLogout","subscribe","previousWasLogout"],"sources":["/home/psa/develop/result-school/blog/src/hooks/use-reset-form.js"],"sourcesContent":["import {useEffect} from 'react';\nimport { useStore } from 'react-redux';\n\n\nexport const useResetForm = (reset) => {\n    const store = useStore();\n    \n    useEffect(() => {\n        let currentWasLogout = store.getState().app.wasLogout;\n\n        return store.subscribe(() => {\n            let previousWasLogout = currentWasLogout;\n            currentWasLogout = store.getState().app.wasLogout;\n\n            if (currentWasLogout !== previousWasLogout) {\n                reset();\n            }\n        });\n\n    }, [reset, store]);\n\n}"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,SAASC,QAAQ,QAAQ,aAAa;AAGtC,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACnC,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EAExBD,SAAS,CAAC,MAAM;IACZ,IAAIM,gBAAgB,GAAGD,KAAK,CAACE,QAAQ,CAAC,CAAC,CAACC,GAAG,CAACC,SAAS;IAErD,OAAOJ,KAAK,CAACK,SAAS,CAAC,MAAM;MACzB,IAAIC,iBAAiB,GAAGL,gBAAgB;MACxCA,gBAAgB,GAAGD,KAAK,CAACE,QAAQ,CAAC,CAAC,CAACC,GAAG,CAACC,SAAS;MAEjD,IAAIH,gBAAgB,KAAKK,iBAAiB,EAAE;QACxCR,KAAK,CAAC,CAAC;MACX;IACJ,CAAC,CAAC;EAEN,CAAC,EAAE,CAACA,KAAK,EAAEE,KAAK,CAAC,CAAC;AAEtB,CAAC;AAAAD,EAAA,CAjBYF,YAAY;EAAA,QACPD,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}